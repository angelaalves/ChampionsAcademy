<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://xmlns.example.com/1571662569058" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns="http://www.tibco.com/schemas/TheChampionsAcademyLeague/Service/AttendedEvents/Schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <wsdl:import namespace="http://xmlns.example.com/1571662569058" location="/Service/AttendedEvents/AttendedEvents.wsdl"/>
    <pd:name>Service/AttendedEvents/AttendedEventsGet.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:attendedEventsGetInput"/>
    <pd:startX>174</pd:startX>
    <pd:startY>246</pd:startY>
    <pd:returnBindings>
        <pfx:attendedEventsGetOutput>
            <GetOut>
                <ns:attendedEventsDataOutput>
                    <xsl:choose>
                        <xsl:when test="exists(  $ID_Event_FK/resultSet/Record)">
                            <xsl:for-each select="$ID_Event_FK/resultSet/Record">
                                <ns:attendedEventsOut>
                                    <xsl:attribute name="ID_Event_FK">
                                        <xsl:value-of select="ID_Event_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Player_FK">
                                        <xsl:value-of select="ID_Player_FK"/>
                                    </xsl:attribute>
                                </ns:attendedEventsOut>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="exists( $ID_Player_FK/resultSet/Record)">
                            <xsl:for-each select="$ID_Player_FK/resultSet/Record">
                                <ns:attendedEventsOut>
                                    <xsl:attribute name="ID_Event_FK">
                                        <xsl:value-of select="ID_Event_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Player_FK">
                                        <xsl:value-of select="ID_Player_FK"/>
                                    </xsl:attribute>
                                </ns:attendedEventsOut>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                            <ns:attendedEventsOut>
                                <xsl:attribute name="ID_Event_FK">
                                    <xsl:value-of select="&quot; &quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ID_Player_FK">
                                    <xsl:value-of select="&quot; &quot;"/>
                                </xsl:attribute>
                            </ns:attendedEventsOut>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns:attendedEventsDataOutput>
            </GetOut>
        </pfx:attendedEventsGetOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:attendedEventsGetOutput"/>
    <pd:endX>834</pd:endX>
    <pd:endY>246</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1571655764833</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>830</pd:x>
        <pd:y>124</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ID_Event_FK">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>489</pd:x>
        <pd:y>121</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>Select * From attendedEvents Where ID_Event_FK=?;</statement>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Event_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Player_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID_Event_FK</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID_Event_FK>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn[1]]/@ID_Event_FK)">
                            <xsl:value-of select="$Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn[1]]/@ID_Event_FK"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID_Event_FK>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ID_Player_FK">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>489</pd:x>
        <pd:y>319</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>Select * From attendedEvents Where ID_Player_FK=?;</statement>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Event_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Player_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID_Player_FK</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID_Player_FK>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn[1]/@ID_Player_FK)">
                            <xsl:value-of select="$Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn[1]/@ID_Player_FK"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID_Player_FK>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ID_Event_FK</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn/@ID_Event_FK)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ID_Player_FK</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Start/pfx:attendedEventsGetInput/GetIn/ns:attendedEventsDataInput/ns:attendedEventsIn/@ID_Player_FK)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ID_Event_FK</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ID_Player_FK</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>