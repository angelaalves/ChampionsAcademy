<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://xmlns.example.com/1571662597687" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/TheChampionsAcademyLeague/Service/Player/Schema.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <wsdl:import namespace="http://xmlns.example.com/1571662597687" location="/Service/Player/Player.wsdl"/>
    <pd:name>Service/Player/PlayerGet.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:PlayerGetInput"/>
    <pd:startX>84</pd:startX>
    <pd:startY>352</pd:startY>
    <pd:returnBindings>
        <pfx:PlayerGetOutput>
            <GetOut>
                <xsl:choose>
                    <xsl:when test="exists($ID_Player/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$ID_Player/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($ID_Guild/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$ID_Guild/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($UserName/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$UserName/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($Email/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$Email/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($Gender/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$Gender/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($UserType/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$UserType/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:when test="exists($Status/resultSet/Record)">
                        <pfx2:PlayerDataOutput>
                            <xsl:for-each select="$Status/resultSet/Record">
                                <pfx2:PlayerOut>
                                    <xsl:attribute name="ID_Player">
                                        <xsl:value-of select="ID_Player"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="ID_Guild_FK">
                                        <xsl:value-of select="ID_Guild_FK"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserName">
                                        <xsl:value-of select="UserName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="status">
                                        <xsl:value-of select="status"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Email">
                                        <xsl:value-of select="Email"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="password">
                                        <xsl:value-of select="password"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Gender">
                                        <xsl:value-of select="Gender"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="UserType">
                                        <xsl:value-of select="UserType"/>
                                    </xsl:attribute>
                                    <xsl:if test="XP">
                                        <xsl:attribute name="XP">
                                            <xsl:value-of select="XP"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="ChampiesToGive">
                                        <xsl:attribute name="ChampiesToGive">
                                            <xsl:value-of select="ChampiesToGive"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                    <xsl:if test="MyChampies">
                                        <xsl:attribute name="MyChampies">
                                            <xsl:value-of select="MyChampies"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:PlayerOut>
                            </xsl:for-each>
                        </pfx2:PlayerDataOutput>
                    </xsl:when>
                    <xsl:otherwise>
                        <pfx2:PlayerDataOutput>
                            <pfx2:PlayerOut>
                                <xsl:attribute name="ID_Player">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ID_Guild_FK">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="UserName">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="status">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="Email">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="password">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="Gender">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="UserType">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="XP">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="ChampiesToGive">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="MyChampies">
                                    <xsl:value-of select="&quot;Not Found&quot;"/>
                                </xsl:attribute>
                            </pfx2:PlayerOut>
                        </pfx2:PlayerDataOutput>
                    </xsl:otherwise>
                </xsl:choose>
            </GetOut>
        </pfx:PlayerGetOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:PlayerGetOutput"/>
    <pd:endX>1056</pd:endX>
    <pd:endY>364</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1571655905204</pd:targetNamespace>
    <pd:activity name="Catch">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>1053</pd:x>
        <pd:y>229</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ID_Player">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>45</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE ID_Player=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID_Player</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID_Player>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Player)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Player"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID_Player>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ID_Guild">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>559</pd:x>
        <pd:y>149</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE ID_Guild_FK=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID_Guild_FK</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID_Guild_FK>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Guild_FK)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Guild_FK"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID_Guild_FK>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UserName">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>559</pd:x>
        <pd:y>247</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE UserName=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>UserName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <UserName>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserName)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </UserName>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Email">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>557</pd:x>
        <pd:y>334</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE email=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>email</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <email>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Email)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Email"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </email>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Gender">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>423</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE Gender=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>Gender</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <Gender>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Gender)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Gender"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Gender>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UserType">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>559</pd:x>
        <pd:y>506</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE UserType=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>UserType</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <UserType>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserType)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserType"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </UserType>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Status">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>556</pd:x>
        <pd:y>606</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM player WHERE status=?;</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>status</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Player</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ID_Guild_FK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Email</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>password</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Gender</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>UserType</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>XP</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>ChampiesToGive</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>MyChampies</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>status</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <status>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@status)">
                            <xsl:value-of select="$Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@status"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </status>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Catch</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ID_Guild</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UserName</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Email</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Gender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UserType</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ID_Player</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ID_Player</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Player)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ID_Guild</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@ID_Guild_FK)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>UserName</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserName)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Email</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Email)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Gender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@Gender)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>UserType</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@UserType)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Status</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:PlayerGetInput/GetIn/pfx2:PlayerDataInput/pfx2:PlayerIn[1]/@status)&gt;0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Status</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>