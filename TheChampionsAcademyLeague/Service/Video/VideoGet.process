<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://xmlns.example.com/1571063877400" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:pfx2="http://www.tibco.com/schemas/TheChampionsAcademyLeague/Schemas/Schema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <wsdl:import namespace="http://xmlns.example.com/1571063877400" location="/Service/Video/Video.wsdl"/>
    <pd:name>Service/Video/VideoGet.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:videoInputGet"/>
    <pd:startX>118</pd:startX>
    <pd:startY>271</pd:startY>
    <pd:returnBindings>
        <pfx:videoOutputGet>
            <part1>
                <pfx2:DataOutput>
                    <xsl:choose>
                        <xsl:when test="exists($ID/resultSet/Record)">
                            <pfx2:videoOut>
                                <xsl:if test="$ID/resultSet/Record[1]/ID_Video">
                                    <xsl:attribute name="ID_Video">
                                        <xsl:value-of select="$ID/resultSet/Record[1]/ID_Video"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$ID/resultSet/Record[1]/VideoName">
                                    <xsl:attribute name="VideoName">
                                        <xsl:value-of select="$ID/resultSet/Record[1]/VideoName"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$ID/resultSet/Record[1]/Duration">
                                    <xsl:attribute name="Duration">
                                        <xsl:value-of select="$ID/resultSet/Record[1]/Duration"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$ID/resultSet/Record[1]/topic">
                                    <xsl:attribute name="Topic">
                                        <xsl:value-of select="$ID/resultSet/Record[1]/topic"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx2:videoOut>
                        </xsl:when>
                        <xsl:when test="exists($VideoName/resultSet/Record)">
                            <pfx2:videoOut>
                                <xsl:if test="$VideoName/resultSet/Record[1]/ID_Video">
                                    <xsl:attribute name="ID_Video">
                                        <xsl:value-of select="$VideoName/resultSet/Record[1]/ID_Video"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$VideoName/resultSet/Record[1]/VideoName">
                                    <xsl:attribute name="VideoName">
                                        <xsl:value-of select="$VideoName/resultSet/Record[1]/VideoName"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$VideoName/resultSet/Record[1]/Duration">
                                    <xsl:attribute name="Duration">
                                        <xsl:value-of select="$VideoName/resultSet/Record[1]/Duration"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$VideoName/resultSet/Record[1]/topic">
                                    <xsl:attribute name="Topic">
                                        <xsl:value-of select="$VideoName/resultSet/Record[1]/topic"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx2:videoOut>
                        </xsl:when>
                        <xsl:when test="exists($Topic/resultSet/Record)">
                            <xsl:for-each select="$Topic/resultSet/Record">
                                <pfx2:videoOut>
                                    <xsl:attribute name="ID_Video">
                                        <xsl:value-of select="ID_Video"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="VideoName">
                                        <xsl:value-of select="VideoName"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="Duration">
                                        <xsl:value-of select="Duration"/>
                                    </xsl:attribute>
                                    <xsl:if test="topic">
                                        <xsl:attribute name="Topic">
                                            <xsl:value-of select="topic"/>
                                        </xsl:attribute>
                                    </xsl:if>
                                </pfx2:videoOut>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx2:videoOut>
                                <xsl:attribute name="ID_Video">
                                    <xsl:value-of select="0"/>
                                </xsl:attribute>
                                <xsl:attribute name="VideoName">
                                    <xsl:value-of select="&quot;null&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="Duration">
                                    <xsl:value-of select="&quot;null&quot;"/>
                                </xsl:attribute>
                                <xsl:attribute name="Topic">
                                    <xsl:value-of select="&quot;null&quot;"/>
                                </xsl:attribute>
                            </pfx2:videoOut>
                        </xsl:otherwise>
                    </xsl:choose>
                </pfx2:DataOutput>
            </part1>
        </pfx:videoOutputGet>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:videoOutputGet"/>
    <pd:endX>944</pd:endX>
    <pd:endY>322</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1571128269566</pd:targetNamespace>
    <pd:activity name="ID">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>397</pd:x>
        <pd:y>104</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT * FROM Videos WHERE ID_Video=(?);</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>ID_Video</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Video</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>VideoName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Duration</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>topic</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <ID_Video>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:videoInputGet/part1/pfx2:videoIn/@ID_Video)">
                            <xsl:value-of select="$Start/pfx:videoInputGet/part1/pfx2:videoIn/@ID_Video"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ID_Video>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null (Doesn't Exists in DB)">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>553</pd:x>
        <pd:y>59</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="VideoName">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>388</pd:x>
        <pd:y>266</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>SELECT * FROM Videos WHERE VideoName=(?);</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>VideoName</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Video</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>VideoName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Duration</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>topic</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <VideoName>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:videoInputGet/part1/pfx2:videoIn/@VideoName)">
                            <xsl:value-of select="$Start/pfx:videoInputGet/part1/pfx2:videoIn/@VideoName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </VideoName>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Topic">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>395</pd:x>
        <pd:y>434</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>SELECT * FROM Videos WHERE Topic=(?);</statement>
            <jdbcSharedConfig>/Receção de Dados/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>Topic</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID_Video</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>VideoName</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>Duration</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>4</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>INT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>topic</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>1</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>CHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <Topic>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:videoInputGet/part1/pfx2:videoIn/@Topic)">
                            <xsl:value-of select="$Start/pfx:videoInputGet/part1/pfx2:videoIn/@Topic"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </Topic>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Not filled up">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>386</pd:x>
        <pd:y>564</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null--Doesn-t-Exists-in-DB--1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>513</pd:x>
        <pd:y>193</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Null--Doesn-t-Exists-in-DB--2">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>508</pd:x>
        <pd:y>331</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>ID</pd:to>
        <pd:xpathDescription>exists ID</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:videoInputGet/part1/pfx2:videoIn/@ID_Video) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ID</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($ID/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ID</pd:from>
        <pd:to>Null (Doesn't Exists in DB)</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-13108</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null (Doesn't Exists in DB)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>VideoName</pd:to>
        <pd:xpathDescription>exists VideoName</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:videoInputGet/part1/pfx2:videoIn/@VideoName) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>VideoName</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($VideoName/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>VideoName</pd:from>
        <pd:to>Null--Doesn-t-Exists-in-DB--1</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-13108</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Topic</pd:to>
        <pd:xpathDescription>exists Topic</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx:videoInputGet/part1/pfx2:videoIn/@Topic) &gt; 0</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Topic</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>Exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Topic/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Topic</pd:from>
        <pd:to>Null--Doesn-t-Exists-in-DB--2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-13108</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Not filled up</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Not filled up</pd:to>
        <pd:xpathDescription>Did not put that shit right</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null--Doesn-t-Exists-in-DB--1</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null--Doesn-t-Exists-in-DB--2</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>